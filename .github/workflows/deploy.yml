name: Deploy Django App to EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 040604
          MYSQL_DATABASE: profile1
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install dj_database_url   # Ensure it's available in CI

    - name: Run tests
      env:
        DATABASE_URL: mysql://django_user:040604@localhost:3306/profile1
      run: |
        python manage.py test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          # Navigate to app directory
          cd /var/www/django-app
          
          # Pull latest code or clone if first time
          if [ -d ".git" ]; then
            git pull origin main
          else
            git clone https://github.com/SahiniAnumula/Cicd_test.git .
          fi
          
          # Create virtual environment if not exists
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          
          # Activate virtual environment and install dependencies
          source venv/bin/activate
          pip install -r requirements.txt
          pip install dj_database_url  
          
          # Create .env file
          cat > .env << EOF
          DEBUG=False
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          ALLOWED_HOSTS=${{ secrets.EC2_HOST }},localhost,127.0.0.1
          EOF
          
          # Run Django commands
          python manage.py collectstatic --noinput
          python manage.py migrate
          
          # Restart services
          sudo systemctl restart django-app
          sudo systemctl restart nginx
